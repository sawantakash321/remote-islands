{"version":3,"sources":["webpack:///1.bundle.js","webpack:///./src/js/modules/unabbreviateDate.js"],"names":["webpackJsonp","92","module","__webpack_exports__","__webpack_require__","unabbreviateDate","abbreviatedDate","_abbreviatedDate","_slicedToArray","day","month","date","time","Error","parseInt","Object","defineProperty","value","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","length","err","Array","isArray","TypeError"],"mappings":"AAAAA,cAAc,IAERC,GACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCEA,SAASC,GAAiBC,GAAiB,GAAAC,GAAAC,EACRF,EADQ,GACpCG,EADoCF,EAAA,GAC/BG,EAD+BH,EAAA,GACxBI,EADwBJ,EAAA,GAChBK,EADgBL,EAAA,EAGzC,QAAQE,GACN,IAAK,MACHA,EAAM,QACN,MACF,KAAK,MACHA,EAAM,SACN,MACF,KAAK,MACHA,EAAM,WACN,MACF,KAAK,MACHA,EAAM,UACN,MACF,KAAK,MACHA,EAAM,QACN,MACF,KAAK,MACHA,EAAM,UACN,MACF,KAAK,MACHA,EAAM,QACN,MACF,SACE,KAAM,IAAII,OAAM,gDAGpB,OAAQH,GACN,IAAK,MACHA,EAAQ,SACR,MACF,KAAK,MACHA,EAAQ,UACR,MACF,KAAK,MACHA,EAAQ,OACR,MACF,KAAK,MACHA,EAAQ,OACR,MACF,KAAK,MACHA,EAAQ,KACR,MACF,KAAK,MACHA,EAAQ,MACR,MACF,KAAK,MACHA,EAAQ,MACR,MACF,KAAK,MACHA,EAAQ,QACR,MACF,KAAK,MACHA,EAAQ,WACR,MACF,KAAK,MACHA,EAAQ,SACR,MACF,KAAK,MACHA,EAAQ,UACR,MACF,KAAK,MACHA,EAAQ,UACR,MACF,SACE,KAAM,IAAIG,OAAM,sCAKpB,GAAa,KAFbF,EAAOG,SAASH,EAAM,MAEK,KAATA,GAAwB,KAATA,EAC/BA,GAAQ,SACH,IAAa,IAATA,GAAuB,KAATA,EACvBA,GAAQ,SACH,IAAa,IAATA,GAAuB,KAATA,EACvBA,GAAQ,SACH,MAAKA,GAAQ,GAAKA,GAAQ,IAAQA,GAAQ,IAAMA,GAAQ,IAG7D,KAAM,IAAIE,OAAM,qBAFhBF,IAAQ,KAKV,OAAQF,EAAKC,EAAOC,EAAMC,GDrF5BG,OAAOC,eAAeb,EAAqB,cAAgBc,OAAO,GAClE,IAAIT,GAAiB,WAAc,QAASU,GAAcC,EAAKC,GAAK,GAAIC,MAAeC,GAAK,EAAUC,GAAK,EAAWC,MAAKC,EAAW,KAAM,IAAK,GAAiCC,GAA7BC,EAAKR,EAAIS,OAAOC,cAAmBP,GAAMI,EAAKC,EAAGG,QAAQC,QAAoBV,EAAKW,KAAKN,EAAGT,QAAYG,GAAKC,EAAKY,SAAWb,GAA3DE,GAAK,IAAoE,MAAOY,GAAOX,GAAK,EAAMC,EAAKU,EAAO,QAAU,KAAWZ,GAAMK,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIJ,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAUF,EAAKC,GAAK,GAAIe,MAAMC,QAAQjB,GAAQ,MAAOA,EAAY,IAAIS,OAAOC,WAAYd,QAAOI,GAAQ,MAAOD,GAAcC,EAAKC,EAAa,MAAM,IAAIiB,WAAU,2DCuFtlBlC,GAAA","file":"1.bundle.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 92:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n// Formats the date so that its contents are unabbreviated and properly suffixed, i.e. 'Mon' will\n// become 'Monday', 'Aug' will become 'August', '04' will become '4th', etc. Here we also enable\n// Webpack's code splitting feature. This allows us to withhold loading certain scripts until the\n// time they're actually needed - in our case, when a user clicks a marker. The '_unabbreviateDate'\n// script is small - only 2kb - so it hardly makes a difference for this website, but that's besides\n// the point. You could imagine how handy code splitting could be when scaled up to much larger\n// projects. Projects I'd like to work on! Hire me, for god's sake! :)\nfunction unabbreviateDate(abbreviatedDate) {\n  var _abbreviatedDate = _slicedToArray(abbreviatedDate, 5),\n      day = _abbreviatedDate[0],\n      month = _abbreviatedDate[1],\n      date = _abbreviatedDate[2],\n      time = _abbreviatedDate[4]; // eslint-disable-line prefer-const\n\n  switch (day) {\n    case 'Mon':\n      day = 'Monday';\n      break;\n    case 'Tue':\n      day = 'Tuesday';\n      break;\n    case 'Wed':\n      day = 'Wednesday';\n      break;\n    case 'Thu':\n      day = 'Thursday';\n      break;\n    case 'Fri':\n      day = 'Friday';\n      break;\n    case 'Sat':\n      day = 'Saturday';\n      break;\n    case 'Sun':\n      day = 'Sunday';\n      break;\n    default:\n      throw new Error('Day of the week abbreviation not recognised.');\n  }\n\n  switch (month) {\n    case 'Jan':\n      month = 'January';\n      break;\n    case 'Feb':\n      month = 'February';\n      break;\n    case 'Mar':\n      month = 'March';\n      break;\n    case 'Apr':\n      month = 'April';\n      break;\n    case 'May':\n      month = 'May';\n      break;\n    case 'Jun':\n      month = 'June';\n      break;\n    case 'Jul':\n      month = 'July';\n      break;\n    case 'Aug':\n      month = 'August';\n      break;\n    case 'Sep':\n      month = 'September';\n      break;\n    case 'Oct':\n      month = 'October';\n      break;\n    case 'Nov':\n      month = 'November';\n      break;\n    case 'Dec':\n      month = 'December';\n      break;\n    default:\n      throw new Error('Month abbreviation not recognised.');\n  }\n\n  date = parseInt(date, 10);\n\n  if (date === 1 || date === 21 || date === 31) {\n    date += 'st';\n  } else if (date === 2 || date === 22) {\n    date += 'nd';\n  } else if (date === 3 || date === 23) {\n    date += 'rd';\n  } else if (date >= 4 && date <= 20 || date >= 24 && date <= 30) {\n    date += 'th';\n  } else {\n    throw new Error('Date is not valid.');\n  }\n\n  return [day, month, date, time];\n} // End of unabbreviateDate().\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (unabbreviateDate);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 1.bundle.js","// Formats the date so that its contents are unabbreviated and properly suffixed, i.e. 'Mon' will\r\n// become 'Monday', 'Aug' will become 'August', '04' will become '4th', etc. Here we also enable\r\n// Webpack's code splitting feature. This allows us to withhold loading certain scripts until the\r\n// time they're actually needed - in our case, when a user clicks a marker. The '_unabbreviateDate'\r\n// script is small - only 2kb - so it hardly makes a difference for this website, but that's besides\r\n// the point. You could imagine how handy code splitting could be when scaled up to much larger\r\n// projects. Projects I'd like to work on! Hire me, for god's sake! :)\r\nfunction unabbreviateDate(abbreviatedDate) {\r\n  let [day, month, date, , time] = abbreviatedDate; // eslint-disable-line prefer-const\r\n\r\n  switch (day) {\r\n    case 'Mon':\r\n      day = 'Monday';\r\n      break;\r\n    case 'Tue':\r\n      day = 'Tuesday';\r\n      break;\r\n    case 'Wed':\r\n      day = 'Wednesday';\r\n      break;\r\n    case 'Thu':\r\n      day = 'Thursday';\r\n      break;\r\n    case 'Fri':\r\n      day = 'Friday';\r\n      break;\r\n    case 'Sat':\r\n      day = 'Saturday';\r\n      break;\r\n    case 'Sun':\r\n      day = 'Sunday';\r\n      break;\r\n    default:\r\n      throw new Error('Day of the week abbreviation not recognised.');\r\n  }\r\n\r\n  switch (month) {\r\n    case 'Jan':\r\n      month = 'January';\r\n      break;\r\n    case 'Feb':\r\n      month = 'February';\r\n      break;\r\n    case 'Mar':\r\n      month = 'March';\r\n      break;\r\n    case 'Apr':\r\n      month = 'April';\r\n      break;\r\n    case 'May':\r\n      month = 'May';\r\n      break;\r\n    case 'Jun':\r\n      month = 'June';\r\n      break;\r\n    case 'Jul':\r\n      month = 'July';\r\n      break;\r\n    case 'Aug':\r\n      month = 'August';\r\n      break;\r\n    case 'Sep':\r\n      month = 'September';\r\n      break;\r\n    case 'Oct':\r\n      month = 'October';\r\n      break;\r\n    case 'Nov':\r\n      month = 'November';\r\n      break;\r\n    case 'Dec':\r\n      month = 'December';\r\n      break;\r\n    default:\r\n      throw new Error('Month abbreviation not recognised.');\r\n  }\r\n\r\n  date = parseInt(date, 10);\r\n\r\n  if (date === 1 || date === 21 || date === 31) {\r\n    date += 'st';\r\n  } else if (date === 2 || date === 22) {\r\n    date += 'nd';\r\n  } else if (date === 3 || date === 23) {\r\n    date += 'rd';\r\n  } else if ((date >= 4 && date <= 20) || (date >= 24 && date <= 30)) {\r\n    date += 'th';\r\n  } else {\r\n    throw new Error('Date is not valid.');\r\n  }\r\n\r\n  return [day, month, date, time];\r\n} // End of unabbreviateDate().\r\n\r\nexport default unabbreviateDate;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/modules/unabbreviateDate.js"],"sourceRoot":""}